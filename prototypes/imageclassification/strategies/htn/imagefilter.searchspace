[NonFunctionalRequirements]

int Price: +


[Constants]
0:Number
0.001:Number
0.01:Number
0.1:Number
0.2:Number
0.4:Number
0.5:Number
0.8:Number
1:Number
2:Number
3:Number
4:Number
5:Number
6:Number
7:Number
8:Number
9:Number
10:Number
11:Number
12:Number
13:Number
14:Number
15:Number
16:Number
17:Number
18:Number
19:Number
20:Number
100.0:Number

[Types]

Thing;
Image;
JPGImage;Image
BMPImage;Image
GIFImage;Image
FeatureVector;
Number;
Value;
Instances;
Filter;
Classes;
Boolean;
Spam;Boolean

[Services]
noop;;;;;(0)
separator;;;;;(0)


### IMAGE FILTERS ###
scale;x;;;;(0) 

Catalano.Imaging.Filters.Photometric.DifferenceOfGaussian:__construct;sigma1,sigma2;f;;;(0)
Catalano.Imaging.Filters.Photometric.DifferenceOfGaussian:applyInPlace;f,x;;;;(0)
Catalano.Imaging.Filters.Photometric.RetinaModel:__construct;sigma1,sigma2,dogSigma1,dogSigma2,threshold;f;;;(0)
Catalano.Imaging.Filters.Photometric.RetinaModel:applyInPlace;f,x;;;;(0)
Catalano.Imaging.Filters.Photometric.SelfQuocientImage:__construct;size,sigma;f;;Filter(f);(0)
Catalano.Imaging.Filters.Photometric.SelfQuocientImage:applyInPlace;f,x;;;;(0)
Catalano.Imaging.Filters.Photometric.SingleScaleRetinex:__construct;scale;f;;Filter(f);(0)
Catalano.Imaging.Filters.Photometric.SingleScaleRetinex:applyInPlace;f,x;;;;(0)
Catalano.Imaging.Filters.Photometric.TanTriggsNormalization:__construct;gamma;f;;Filter(f);(0)
Catalano.Imaging.Filters.Photometric.TanTriggsNormalization:applyInPlace;f,x;;;;(0)



### FEATURE EXTRACTORS ###
Catalano.Imaging.Texture.BinaryPattern.LocalBinaryPattern:__construct; ; f; ; ; (0)
Catalano.Imaging.Texture.BinaryPattern.GradientLocalBinaryPattern:__construct; ; f; ; ; (0)
Catalano.Imaging.Texture.BinaryPattern.ImprovedLocalBinaryPattern:__construct; ; f; ; ; (0)
Catalano.Imaging.Texture.BinaryPattern.LocalGradientCoding:__construct; ; f; ; ; (0)
Catalano.Imaging.Texture.BinaryPattern.CenterSymmetricLocalBinaryPattern:__construct; ; f; ; ; (0)
Catalano.Imaging.Texture.BinaryPattern.MedianBinaryPattern:__construct; ; f; ; ; (0)
Catalano.Imaging.Texture.BinaryPattern.MultiblockLocalBinaryPattern:__construct; ; f; ; ; (0)

[Methods]
#noop; createImagePreprocessor(x); ; ; noop()


### TOP LEVEL ###
main; ppAndFe(x); x; ; createScalingImagePreprocessor(x) -> separator() -> createFeatureExtractor(x)

# incorporate scale into the process
scale; createScalingImagePreprocessor(x); x; ; scale(x)
#pScale; createScalingImagePreprocessor(x); x; ; createImagePreprocessor(x) -> scale(x)
#ppScale; createScalingImagePreprocessor(x); x; ; createImagePreprocessor(x) -> createImagePreprocessor(x) -> scale(x)
#pppScale; createScalingImagePreprocessor(x); x; ; createImagePreprocessor(x) -> createImagePreprocessor(x) -> createImagePreprocessor(x) -> scale(x) 
scaleP; createScalingImagePreprocessor(x); x; ; scale(x) -> createImagePreprocessor(x)
scalePP; createScalingImagePreprocessor(x); x; ; scale(x) -> createImagePreprocessor(x) -> createImagePreprocessor(x)
#scalePPP; createScalingImagePreprocessor(x); x; ; scale(x) -> createImagePreprocessor(x) -> createImagePreprocessor(x) -> createImagePreprocessor(x)
#pScaleP; createScalingImagePreprocessor(x); x; ; createImagePreprocessor(x) -> scale(x) -> createImagePreprocessor(x)

### IMAGE FILTERS ###
df; createImagePreprocessor(x); x, sigma1, sigma2, f; ; configDifferenceOfGaussian(sigma1) -> configDifferenceOfGaussian(sigma2) -> Catalano.Imaging.Filters.Photometric.DifferenceOfGaussian:__construct(sigma1,sigma2,f) -> Catalano.Imaging.Filters.Photometric.DifferenceOfGaussian:applyInPlace(f,x)
#cdf; configDifferenceOfGaussian(sigma); sigma; DG_SIGMA(sigma); chooseSigma(sigma) 
#ret; createImagePreprocessor(x); x, sigma1, sigma2, dogSigma1, dogSigma2, threshold, f; RET_SIGMA(sigma1) & RET_SIGMA(sigma2) & RET_SIGMA(dogSigma1) & RET_SIGMA(dogSigma2) & RET_THRESHOLD(threshold); Catalano.Imaging.Filters.Photometric.RetinaModel:__construct(sigma1,sigma2,dogSigma1,dogSigma2,threshold,f) -> Catalano.Imaging.Filters.Photometric.RetinaModel:applyInPlace(f,x)
#sqi; createImagePreprocessor(x); x, size, sigma, f; SQI_SIZE(size) & SQI_SIGMA(sigma) ; Catalano.Imaging.Filters.Photometric.SelfQuocientImage:__construct(size,sigma,f) -> Catalano.Imaging.Filters.Photometric.SelfQuocientImage:applyInPlace(f,x)
#ssret; createImagePreprocessor(x); x, scale, f; SSRET_SCALE(scale); Catalano.Imaging.Filters.Photometric.SingleScaleRetinex:__construct(scale,f) -> Catalano.Imaging.Filters.Photometric.SingleScaleRetinex:applyInPlace(f,x)
#ttn; createImagePreprocessor(x); x, gamma, f; TTN_GAMMA(gamma); Catalano.Imaging.Filters.Photometric.TanTriggsNormalization:__construct(gamma,f) -> Catalano.Imaging.Filters.Photometric.TanTriggsNormalization:applyInPlace(f,x)

### FEATURE EXTRACTORS ###
lbp; createFeatureExtractor(x); x, f; ; Catalano.Imaging.Texture.BinaryPattern.LocalBinaryPattern:__construct(f)
#glbp; createFeatureExtractor(x); x, f; ; Catalano.Imaging.Texture.BinaryPattern.GradientLocalBinaryPattern:__construct(f)
#ilbp; createFeatureExtractor(x); x, f; ; Catalano.Imaging.Texture.BinaryPattern.ImprovedLocalBinaryPattern:__construct(f)
#lgr; createFeatureExtractor(x); x, f; ; Catalano.Imaging.Texture.BinaryPattern.LocalGradientCoding:__construct(f) 
#cslbp; createFeatureExtractor(x); x, f; ; Catalano.Imaging.Texture.BinaryPattern.CenterSymmetricLocalBinaryPattern:__construct(f)
#mbp; createFeatureExtractor(x); x, f; ; Catalano.Imaging.Texture.BinaryPattern.MedianBinaryPattern:__construct(f)
#mlbp; createFeatureExtractor(x); x, f; ; Catalano.Imaging.Texture.BinaryPattern.MultiblockLocalBinaryPattern:__construct(f)

[Rules]
# a good combination is 15/3 or 13/0. A bad one is 17/3 or 17/0

### DifferenceOfGaussian ###
DG_SIGMA(0)
DG_SIGMA(1)
DG_SIGMA(2)
DG_SIGMA(3)

### Retinal Model ###
RET_SIGMA(0)
RET_SIGMA(0.5)
RET_SIGMA(1)
RET_SIGMA(3)
RET_SIGMA(4)
RET_THRESHOLD(1)
RET_THRESHOLD(3)
RET_THRESHOLD(5)
RET_THRESHOLD(7)

### SelfQuotientImage ###
SQI_SIZE(1)
SQI_SIZE(3)
SQI_SIZE(5)
SQI_SIZE(7)
SQI_SIZE(9)
SQI_SIZE(11)
SQI_SIZE(13)
SQI_SIZE(15)
SQI_SIZE(17)
SQI_SIZE(19)
SQI_SIGMA(0)
SQI_SIGMA(1)
SQI_SIGMA(2)
SQI_SIGMA(3)

### Single Scale Retinex ###
SSRET_SCALE(5)
SSRET_SCALE(10)
SSRET_SCALE(15)
SSRET_SCALE(20)

### TanTriggsNormalization ###
TTN_GAMMA(0.1)
TTN_GAMMA(0.2)
TTN_GAMMA(0.4)
TTN_GAMMA(0.5)
TTN_GAMMA(0.8)

[Queries]

q1;fb:Image;f:Filter;Image(fb);ppAndFe(fb);(1000)